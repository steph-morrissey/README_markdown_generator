// Declaration of required variables
const inquirer = require("inquirer");
const axios = require("axios");
const fs = require("fs");
const generateMarkdown = require("./utils/generateMarkdown");
const fileName = "myREADME.md";

// README markdown questions list
const questions = [
  {
    type: "input",
    name: "github_username",
    message: "What is your GitHub username?",
  },
  {
    type: "input",
    name: "title",
    message: "What is the title of your project?",
  },
  {
    type: "input",
    name: "description",
    message: "Give a description for your project?",
  },
  {
    type: "input",
    name: "installation",
    message: "What are the steps required to install your project?",
  },
  {
    type: "input",
    name: "usage",
    message: "What are the specific instructions for how to use the project?",
  },
  {
    type: "insert",
    name: "tests",
    message:
      "Enter a description of what each test is and how you would run them (ex: Test to run this feature, npm test file.js)",
  },
  {
    type: "list",
    name: "license",
    message: "What license is your project using?",
    choices: [
      "mit",
      "lgpl-3.0",
      "mpl-2.0",
      "agpl-3.0",
      "unlicense",
      "isc",
      "apache-2.0",
      "gpl-3.0",
    ],
  },
  {
    type: "input",
    name: "contributing",
    message: "What is the link to the GitHub repository for your project?",
  },
  {
    type: "input",
    name: "questions",
    message:
      "Please provide any comments you would like to add if someone wants to contact you",
  },
];

// Transforms answers generated by user into correct README template format and writes to a README.md
function writeToFile(data) {
  // Writes README content to README.md file
  fs.writeFile(fileName, generateMarkdown(data), (err) => {
    if (err) {
      console.log(err);
      throw "Failed to write the file";
    }
    console.log("The file has been saved!");
  });
}

// Calls inquirer module to ask user relevant README questions,
// then, once all questions have been answered, call the writeToFile function
function init() {
  const processGithubInfo = (data) => {
    const githubUrl = `https://api.github.com/users/${data.github_username}`;
    axios.get(githubUrl).then((response) => {
      data.githubAvatarUrl = response.data.avatar_url;
      data.githubHtmlUrl = response.data.html_url;
      data.email = response.data.email;
      data.name = response.data.name;
      processLicenseInfo(data);
    });
  };
  const processLicenseInfo = (data) => {
    const githubLicense = `https://api.github.com/licenses/${data.license}`;
    axios.get(githubLicense).then((response) => {
      data.licenseBody = response.data.body;
      writeToFile(data);
    });
  };
  inquirer.prompt(questions).then(processGithubInfo);
}

init();
